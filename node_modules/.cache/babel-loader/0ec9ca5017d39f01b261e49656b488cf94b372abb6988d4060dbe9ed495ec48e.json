{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\nvar _rxjs = require(\"rxjs\");\nvar _errors = require(\"./errors\");\nclass TokenObject {\n  constructor(authStorageName, authStorageType, refreshTokenName, cookieDomain, cookieSecure) {\n    this.authStorageName = authStorageName;\n    this.authStorageType = authStorageType;\n    this.stateStorageName = `${authStorageName}_state`;\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.authStorageTypeName = `${this.authStorageName}_type`;\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.authValue = this.initialToken_();\n    this.authSubject = new _rxjs.BehaviorSubject(this.authValue);\n    this.authSubject.subscribe({\n      next: this.syncTokens,\n      complete: () => {\n        console.log(\"Token Synced\");\n      },\n      error: err => {\n        console.error(\"Error Occured while syncing token\");\n        console.log(err);\n      }\n    });\n  }\n  subscribe = (next, error) => {\n    this.authSubject.subscribe({\n      next: next,\n      error: error\n    });\n  };\n  observe = () => {\n    return this.authSubject.asObservable();\n  };\n  set = data => {\n    let obj = this.value;\n    if (!!data.auth) {\n      let userState = obj.userState;\n      if (data.userState !== undefined) {\n        userState = data.userState;\n      }\n      obj = {\n        ...obj,\n        auth: {\n          'token': data.auth.token,\n          'type': data.auth.type,\n          'expiresAt': this.getExpireDateTime_(data.auth.token)\n        },\n        isSignIn: true,\n        userState: userState\n      };\n    } else if (data.auth === null) {\n      obj = {\n        ...obj,\n        auth: null,\n        isSignIn: false,\n        userState: null\n      };\n    }\n    if (this.isUsingRefreshToken) {\n      if (!!data.refresh) {\n        obj = {\n          ...obj,\n          refresh: {\n            'token': data.refresh,\n            'expiresAt': this.getExpireDateTime_(data.refresh)\n          }\n        };\n      } else if (data.refresh === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      }\n    }\n    this.authValue = obj;\n    this.authSubject.next(obj);\n  };\n  get value() {\n    return this.authSubject.value;\n  }\n  initialToken_ = () => {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  };\n  initialCookieToken_ = () => {\n    const authToken = _jsCookie.default.get(this.authStorageName);\n    const authTokenType = _jsCookie.default.get(this.authStorageTypeName);\n    const stateCookie = _jsCookie.default.get(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? _jsCookie.default.get(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  initialLSToken_ = () => {\n    const authToken = localStorage.getItem(this.authStorageName);\n    const authTokenType = localStorage.getItem(this.authStorageTypeName);\n    const stateCookie = localStorage.getItem(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? localStorage.getItem(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  checkTokenExist_ = (authToken, authTokenType, stateCookie, refreshToken) => {\n    try {\n      let refresh;\n      if (this.isUsingRefreshToken && !!refreshToken) {\n        const refreshTokenExpiresAt = this.getExpireDateTime_(refreshToken);\n        if (refreshTokenExpiresAt < new Date()) {\n          refresh = null;\n        } else {\n          refresh = {\n            token: refreshToken,\n            expiresAt: refreshTokenExpiresAt\n          };\n        }\n      } else {\n        refresh = null;\n      }\n      if (this.isUsingRefreshToken && !refresh) {\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n      let auth;\n      let authState;\n      if (!!authToken && !!authTokenType && !!stateCookie) {\n        try {\n          const expiresAt = this.getExpireDateTime_(authToken);\n          if (expiresAt < new Date()) {\n            auth = null;\n            authState = null;\n          } else {\n            authState = JSON.parse(stateCookie);\n            auth = {\n              token: authToken,\n              type: authTokenType,\n              expiresAt: expiresAt\n            };\n          }\n        } catch (e) {\n          auth = null;\n          authState = null;\n        }\n      } else {\n        auth = null;\n        authState = null;\n      }\n      if (!!refresh) {\n        if (!!auth && !!authState) {\n          return {\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          };\n        }\n        this.removeAuth();\n        return {\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      } else if (!this.isUsingRefreshToken && !!auth && !!authState) {\n        return {\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        };\n      }\n      {\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n    } catch (e) {\n      this.removeAllToken();\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false\n      };\n    }\n  };\n  parseJwt_ = token => {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n  getExpireDateTime_ = token => {\n    const jwtData = this.parseJwt_(token);\n    if (jwtData.hasOwnProperty('iat')) {\n      const d = new Date(0);\n      d.setUTCSeconds(jwtData.iat);\n      return d;\n    } else {\n      throw new _errors.AuthError('JWT has no iat param');\n    }\n  };\n  syncTokens = authState => {\n    if (!!authState.auth) {\n      this.setAuthToken(authState.auth.token, authState.auth.type, authState.userState);\n    } else {\n      this.removeAuth();\n    }\n    if (!!authState.refresh && this.isUsingRefreshToken) {\n      this.setRefreshToken(authState.refresh.token);\n    } else {\n      this.removeRefresh();\n    }\n  };\n  setAuthToken = (authToken, authTokenType, authState) => {\n    if (this.authStorageType === 'cookie') {\n      const expiresAt = this.getExpireDateTime_(authToken);\n      _jsCookie.default.set(this.authStorageName, authToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      _jsCookie.default.set(this.authStorageTypeName, authTokenType, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      if (!!authState) {\n        _jsCookie.default.set(this.stateStorageName, JSON.stringify(authState), {\n          expires: expiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else {\n      window.localStorage.setItem(this.authStorageName, authToken);\n      window.localStorage.setItem(this.authStorageTypeName, authTokenType);\n      if (!!authState) {\n        window.localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n      }\n    }\n  };\n  setRefreshToken = refreshToken => {\n    if (this.authStorageType === 'cookie') {\n      if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n        const refreshTokenExpiresAt = this.getExpireDateTime_(refreshToken);\n        _jsCookie.default.set(this.refreshTokenName, refreshToken, {\n          expires: refreshTokenExpiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else {\n      if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n        localStorage.setItem(this.refreshTokenName, refreshToken);\n      }\n    }\n  };\n  removeAllToken = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAllCookieToken_();\n    } else {\n      this.removeAllLSToken_();\n    }\n  };\n  removeAllCookieToken_ = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeAllLSToken_ = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  removeAuth = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAuthCookie();\n    } else {\n      this.removeAuthToken();\n    }\n  };\n  removeAuthCookie = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n  };\n  removeAuthToken = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n  };\n  removeRefresh = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeRefreshCookie();\n    } else {\n      this.removeRefreshToken();\n    }\n  };\n  removeRefreshCookie = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeRefreshToken = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n}\nvar _default = exports.default = TokenObject;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_jsCookie","_rxjs","_errors","TokenObject","constructor","authStorageName","authStorageType","refreshTokenName","cookieDomain","cookieSecure","stateStorageName","authStorageTypeName","isUsingRefreshToken","authValue","initialToken_","authSubject","BehaviorSubject","subscribe","next","syncTokens","complete","console","log","error","err","observe","asObservable","set","data","obj","auth","userState","undefined","token","type","getExpireDateTime_","isSignIn","refresh","initialCookieToken_","initialLSToken_","authToken","get","authTokenType","stateCookie","refreshToken","checkTokenExist_","localStorage","getItem","refreshTokenExpiresAt","Date","expiresAt","removeAllToken","authState","JSON","parse","e","removeAuth","parseJwt_","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","jwtData","hasOwnProperty","d","setUTCSeconds","iat","AuthError","setAuthToken","setRefreshToken","removeRefresh","expires","domain","secure","stringify","window","setItem","removeAllCookieToken_","removeAllLSToken_","remove","removeItem","removeAuthCookie","removeAuthToken","removeRefreshCookie","removeRefreshToken","_default"],"sources":["/Users/anil/Documents/GitHub/armada-ai/node_modules/react-auth-kit/RxTokenObject.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\nvar _rxjs = require(\"rxjs\");\nvar _errors = require(\"./errors\");\nclass TokenObject {\n  constructor(authStorageName, authStorageType, refreshTokenName, cookieDomain, cookieSecure) {\n    this.authStorageName = authStorageName;\n    this.authStorageType = authStorageType;\n    this.stateStorageName = `${authStorageName}_state`;\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.authStorageTypeName = `${this.authStorageName}_type`;\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.authValue = this.initialToken_();\n    this.authSubject = new _rxjs.BehaviorSubject(this.authValue);\n    this.authSubject.subscribe({\n      next: this.syncTokens,\n      complete: () => {\n        console.log(\"Token Synced\");\n      },\n      error: err => {\n        console.error(\"Error Occured while syncing token\");\n        console.log(err);\n      }\n    });\n  }\n  subscribe = (next, error) => {\n    this.authSubject.subscribe({\n      next: next,\n      error: error\n    });\n  };\n  observe = () => {\n    return this.authSubject.asObservable();\n  };\n  set = data => {\n    let obj = this.value;\n    if (!!data.auth) {\n      let userState = obj.userState;\n      if (data.userState !== undefined) {\n        userState = data.userState;\n      }\n      obj = {\n        ...obj,\n        auth: {\n          'token': data.auth.token,\n          'type': data.auth.type,\n          'expiresAt': this.getExpireDateTime_(data.auth.token)\n        },\n        isSignIn: true,\n        userState: userState\n      };\n    } else if (data.auth === null) {\n      obj = {\n        ...obj,\n        auth: null,\n        isSignIn: false,\n        userState: null\n      };\n    }\n    if (this.isUsingRefreshToken) {\n      if (!!data.refresh) {\n        obj = {\n          ...obj,\n          refresh: {\n            'token': data.refresh,\n            'expiresAt': this.getExpireDateTime_(data.refresh)\n          }\n        };\n      } else if (data.refresh === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      }\n    }\n    this.authValue = obj;\n    this.authSubject.next(obj);\n  };\n  get value() {\n    return this.authSubject.value;\n  }\n  initialToken_ = () => {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  };\n  initialCookieToken_ = () => {\n    const authToken = _jsCookie.default.get(this.authStorageName);\n    const authTokenType = _jsCookie.default.get(this.authStorageTypeName);\n    const stateCookie = _jsCookie.default.get(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? _jsCookie.default.get(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  initialLSToken_ = () => {\n    const authToken = localStorage.getItem(this.authStorageName);\n    const authTokenType = localStorage.getItem(this.authStorageTypeName);\n    const stateCookie = localStorage.getItem(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? localStorage.getItem(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  checkTokenExist_ = (authToken, authTokenType, stateCookie, refreshToken) => {\n    try {\n      let refresh;\n      if (this.isUsingRefreshToken && !!refreshToken) {\n        const refreshTokenExpiresAt = this.getExpireDateTime_(refreshToken);\n        if (refreshTokenExpiresAt < new Date()) {\n          refresh = null;\n        } else {\n          refresh = {\n            token: refreshToken,\n            expiresAt: refreshTokenExpiresAt\n          };\n        }\n      } else {\n        refresh = null;\n      }\n      if (this.isUsingRefreshToken && !refresh) {\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n      let auth;\n      let authState;\n      if (!!authToken && !!authTokenType && !!stateCookie) {\n        try {\n          const expiresAt = this.getExpireDateTime_(authToken);\n          if (expiresAt < new Date()) {\n            auth = null;\n            authState = null;\n          } else {\n            authState = JSON.parse(stateCookie);\n            auth = {\n              token: authToken,\n              type: authTokenType,\n              expiresAt: expiresAt\n            };\n          }\n        } catch (e) {\n          auth = null;\n          authState = null;\n        }\n      } else {\n        auth = null;\n        authState = null;\n      }\n      if (!!refresh) {\n        if (!!auth && !!authState) {\n          return {\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          };\n        }\n        this.removeAuth();\n        return {\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      } else if (!this.isUsingRefreshToken && !!auth && !!authState) {\n        return {\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        };\n      }\n      {\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n    } catch (e) {\n      this.removeAllToken();\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false\n      };\n    }\n  };\n  parseJwt_ = token => {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n  getExpireDateTime_ = token => {\n    const jwtData = this.parseJwt_(token);\n    if (jwtData.hasOwnProperty('iat')) {\n      const d = new Date(0);\n      d.setUTCSeconds(jwtData.iat);\n      return d;\n    } else {\n      throw new _errors.AuthError('JWT has no iat param');\n    }\n  };\n  syncTokens = authState => {\n    if (!!authState.auth) {\n      this.setAuthToken(authState.auth.token, authState.auth.type, authState.userState);\n    } else {\n      this.removeAuth();\n    }\n    if (!!authState.refresh && this.isUsingRefreshToken) {\n      this.setRefreshToken(authState.refresh.token);\n    } else {\n      this.removeRefresh();\n    }\n  };\n  setAuthToken = (authToken, authTokenType, authState) => {\n    if (this.authStorageType === 'cookie') {\n      const expiresAt = this.getExpireDateTime_(authToken);\n      _jsCookie.default.set(this.authStorageName, authToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      _jsCookie.default.set(this.authStorageTypeName, authTokenType, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      if (!!authState) {\n        _jsCookie.default.set(this.stateStorageName, JSON.stringify(authState), {\n          expires: expiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else {\n      window.localStorage.setItem(this.authStorageName, authToken);\n      window.localStorage.setItem(this.authStorageTypeName, authTokenType);\n      if (!!authState) {\n        window.localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n      }\n    }\n  };\n  setRefreshToken = refreshToken => {\n    if (this.authStorageType === 'cookie') {\n      if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n        const refreshTokenExpiresAt = this.getExpireDateTime_(refreshToken);\n        _jsCookie.default.set(this.refreshTokenName, refreshToken, {\n          expires: refreshTokenExpiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else {\n      if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n        localStorage.setItem(this.refreshTokenName, refreshToken);\n      }\n    }\n  };\n  removeAllToken = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAllCookieToken_();\n    } else {\n      this.removeAllLSToken_();\n    }\n  };\n  removeAllCookieToken_ = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeAllLSToken_ = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  removeAuth = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAuthCookie();\n    } else {\n      this.removeAuthToken();\n    }\n  };\n  removeAuthCookie = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n  };\n  removeAuthToken = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n  };\n  removeRefresh = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeRefreshCookie();\n    } else {\n      this.removeRefreshToken();\n    }\n  };\n  removeRefreshCookie = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeRefreshToken = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n}\nvar _default = exports.default = TokenObject;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}