{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduleArray = void 0;\nvar Observable_1 = require(\"../Observable\");\nfunction scheduleArray(input, scheduler) {\n  return new Observable_1.Observable(function (subscriber) {\n    var i = 0;\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n      } else {\n        subscriber.next(input[i++]);\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\nexports.scheduleArray = scheduleArray;","map":{"version":3,"names":["Observable_1","require","scheduleArray","input","scheduler","Observable","subscriber","i","schedule","length","complete","next","closed","exports"],"sources":["/Users/anil/Documents/GitHub/armada-ai/node_modules/rxjs/src/internal/scheduled/scheduleArray.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAGA,SAAgBC,aAAaA,CAAIC,KAAmB,EAAEC,SAAwB;EAC5E,OAAO,IAAIJ,YAAA,CAAAK,UAAU,CAAI,UAACC,UAAU;IAElC,IAAIC,CAAC,GAAG,CAAC;IAET,OAAOH,SAAS,CAACI,QAAQ,CAAC;MACxB,IAAID,CAAC,KAAKJ,KAAK,CAACM,MAAM,EAAE;QAGtBH,UAAU,CAACI,QAAQ,EAAE;OACtB,MAAM;QAGLJ,UAAU,CAACK,IAAI,CAACR,KAAK,CAACI,CAAC,EAAE,CAAC,CAAC;QAI3B,IAAI,CAACD,UAAU,CAACM,MAAM,EAAE;UACtB,IAAI,CAACJ,QAAQ,EAAE;;;IAGrB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAvBAK,OAAA,CAAAX,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}