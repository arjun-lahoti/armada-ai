{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromSubscribable = void 0;\nvar Observable_1 = require(\"../Observable\");\nfunction fromSubscribable(subscribable) {\n  return new Observable_1.Observable(function (subscriber) {\n    return subscribable.subscribe(subscriber);\n  });\n}\nexports.fromSubscribable = fromSubscribable;","map":{"version":3,"names":["Observable_1","require","fromSubscribable","subscribable","Observable","subscriber","subscribe","exports"],"sources":["/Users/anil/Documents/GitHub/1appAI/node_modules/rxjs/src/internal/observable/fromSubscribable.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAcA,SAAgBC,gBAAgBA,CAAIC,YAA6B;EAC/D,OAAO,IAAIH,YAAA,CAAAI,UAAU,CAAC,UAACC,UAAyB;IAAK,OAAAF,YAAY,CAACG,SAAS,CAACD,UAAU,CAAC;EAAlC,CAAkC,CAAC;AAC1F;AAFAE,OAAA,CAAAL,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}