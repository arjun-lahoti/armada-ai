{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reportUnhandledError = void 0;\nvar config_1 = require(\"../config\");\nvar timeoutProvider_1 = require(\"../scheduler/timeoutProvider\");\nfunction reportUnhandledError(err) {\n  timeoutProvider_1.timeoutProvider.setTimeout(function () {\n    var onUnhandledError = config_1.config.onUnhandledError;\n    if (onUnhandledError) {\n      onUnhandledError(err);\n    } else {\n      throw err;\n    }\n  });\n}\nexports.reportUnhandledError = reportUnhandledError;","map":{"version":3,"names":["config_1","require","timeoutProvider_1","reportUnhandledError","err","timeoutProvider","setTimeout","onUnhandledError","config","exports"],"sources":["/Users/anil/Documents/GitHub/armada-ai/node_modules/rxjs/src/internal/util/reportUnhandledError.ts"],"sourcesContent":["import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AAWA,SAAgBE,oBAAoBA,CAACC,GAAQ;EAC3CF,iBAAA,CAAAG,eAAe,CAACC,UAAU,CAAC;IACjB,IAAAC,gBAAgB,GAAKP,QAAA,CAAAQ,MAAM,CAAAD,gBAAX;IACxB,IAAIA,gBAAgB,EAAE;MAEpBA,gBAAgB,CAACH,GAAG,CAAC;KACtB,MAAM;MAEL,MAAMA,GAAG;;EAEb,CAAC,CAAC;AACJ;AAXAK,OAAA,CAAAN,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}