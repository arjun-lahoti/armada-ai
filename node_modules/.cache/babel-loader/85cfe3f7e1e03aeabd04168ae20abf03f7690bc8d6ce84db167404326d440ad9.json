{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.argsOrArgArray = void 0;\nvar isArray = Array.isArray;\nfunction argsOrArgArray(args) {\n  return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\nexports.argsOrArgArray = argsOrArgArray;","map":{"version":3,"names":["isArray","Array","argsOrArgArray","args","length","exports"],"sources":["/Users/anil/Documents/GitHub/armada-ai/node_modules/rxjs/src/internal/util/argsOrArgArray.ts"],"sourcesContent":["const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n"],"mappings":";;;;;;AAAQ,IAAAA,OAAO,GAAKC,KAAK,CAAAD,OAAV;AAMf,SAAgBE,cAAcA,CAAIC,IAAiB;EACjD,OAAOA,IAAI,CAACC,MAAM,KAAK,CAAC,IAAIJ,OAAO,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAIA,IAAY;AACxE;AAFAE,OAAA,CAAAH,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}