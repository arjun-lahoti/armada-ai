{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.observable = void 0;\nexports.observable = function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n}();","map":{"version":3,"names":["exports","observable","Symbol"],"sources":["/Users/anil/Documents/GitHub/1appAI/node_modules/rxjs/src/internal/symbol/observable.ts"],"sourcesContent":["/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n"],"mappings":";;;;;;AAMaA,OAAA,CAAAC,UAAU,GAAqB;EAAM,OAAC,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACD,UAAU,IAAK,cAAc;AAArE,CAAqE,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}